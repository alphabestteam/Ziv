HTML and CSS Questions

Block-level elements, inline-block elements, and inline elements are all types of HTML elements that define the structure and behavior of the data. Block-level elements are used to create containers or groups in the page (headings, paragraphs, and div). Inline-block elements are a mix of block-level and inline elements. They create inline-level boxes on which properties can be applied. An example of this is span.  Inline elements are used for styling specific content within a larger block of content. An example will be <a>, <em> , and <stronger>.
The <!DOCTYPE> declaration provides the browser the type of document.
The box model is a concept that explains how elements are positioned and presented on a webpage. The browser sees all elements in a webpage as contained by a box. Any changes made to the element will apply to said box.  The difference between the box’s padding and margin is that the padding is the space between the data inside the element and the border, while the margin is the space between the border and the outside edge of the element.
Responsive web design is a web design “strategy” that aims to ensure that a website or web application looks and functions regardless  of the  devices and screen sizes on which it is presented. Its main principles are flexible images and media (adaptable to screen sizes), a dynamic grid layout, using media queries, responsive typography, and performance optimization.
In CSS, both absolute and relative lengths are used. Absolute lengths are fixed and use units like pixels, points centimeters or millimeters, and inches. Relative lengths are applied based on external values, like the size of other elements or the user’s settings. This includes units like percents, em, rem, and viewpoint units. 
Both the display and position properties affect the layout and positioning of elements on a web page. ‘Display’ controls how an element is rendered in terms of its box model and behavior. It determines how an element is displayed within the document flow. Its optional values are inline, block, inline-block. The position property controls the positioning of an element relative to its normal position within the document flow and its behavior (whether it is constant or moveable, for example). Its options are  relative, absolute, static, fixed or sticky. 
 Flexbox stands for flexible box layout. It is a CSS model which helps in placing items in their container, even when their size is dynamic. This model has multiple properties:
Justify-content: controls the horizontal alignment of items inside a container along the main axis. It helps distribute the space around and between flex items.
Align-items: controls the vertical alignment of items inside a container along the cross axis. It helps distribute items within the container.
Align-self: controls the alignments of individual items along the cross-axis. Override align-items on the specific items that it’s used on.
Align-content: controls the alignment of multiple lines of flex items within their container when they wrap onto new lines.
Flex-grow: controls how items should grow to fill the available space in the container.
Flex-wrap: controls whether items should wrap around other items when there isn’t enough available space.
While both class and ID are selectors, there is a key difference. The ID attribute must have a unique value. Now two elements in an HTML document can have the same ID. Oppositely, the class attribute groups together multiple elements and the same class references many elements.
While both div and span help structure a web page, there are some key differences. The <span> element is an inline-level element and the<div> element is a block-level element. Moreover, span is used when targeting ad applying styles or scripts to a specific portion of inline text, and div is used when targeting ad applying styles or scripts to a specific portion of inline text.
Semantic HTML elements give meaning to the structure of a website and help both browsers and developers understand the contained data and its context. For example, <header>,  <footer> and <main> provide structure to the page. 
::before and ::after are pseudo-elements that allow  content insertion before or after the data inside an element. They are usually used for decorative purposes or for adding additional content to elements without modifying the actual HTML structure. 
SCSS, or Sassy Cascading Style Sheets,  is a more advanced and evolved version of the CSS language. It is a stylesheet language used for web design. In contrast to  CSS, which has a simple and straightforward syntax, SCSS has a more flexible syntax that uses concepts like nesting and variables. SCSS also allows imports of other CSS files, which cannot be done with regular CSS. Lastly, while CSS is universally supported in almost all browsers, SCSS must first be compiled to CSS before it can be used. 
